calculator notes. 

oops = objects -> real world enteties, class is bluperint of that object.


passing object into class= we do it via set(object name)/constructor()

null ponter = null.something.

Area calculator sould not have idea about specific shape or method calculation.
this can be achieved via interface.


interface can point to the child class object. 

the decision of which method to call is based on the type of object passed in to setter()
parennt ref can only call the overideen abstract method in child classes not the other methods in child class.

dependecy injection = sending object into class.

ioc = inversion of control means that we dont pass inject the object into class manually. 

tight cuopling == for example in areacalc we had objects reference , setter and methods which means that any change  in respective classes 
it will affect areacalc.

loose cuupoling = when we used interface reference in area calc changes in respective class we do not need to touch the  AreaCalc.
